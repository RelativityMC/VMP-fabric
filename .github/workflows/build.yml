# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./.gradle/loom-cache
          key: ${{ runner.os }}-gradle0-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle0-
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21
          java-package: jdk
      - name: build
        run: ./gradlew build
      - name: upload to modrinth and curseforge
        run: ./gradlew modrinth curseforge
        if: github.ref == 'refs/heads/ver/1.21.3'
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_UPLOAD_TOKEN }}
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_API_TOKEN }}
          GITHUB_EVENT_RAW_PATH: ${{ github.event_path }}
        continue-on-error: true
      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/
